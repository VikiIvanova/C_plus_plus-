Примерни въпроси за теоретичен изпит
Да се реализира функция, която слива два едносвързани списъка от числа, подредени в нарастващ ред, така че резултатът да съдържа всички числа отново в нарастващ ред.
Кое от следните твърдения за алгоритми над графи е вярно (с n е означен броят на върховете):
Обхождането на граф в дълбочина винаги е по-бързо от обхождането му в ширина.
Обхождането на граф в ширина винаги е по-бързо от обхождането на граф в дълбочина.
Обхождането на граф в ширина заема в най-лошия случай памет, линейна по n
Обхождането на граф в дълбочина отнема в най-лошия случай памет, линейна по n
Да се посочат едно предимство и един недостатък на представянето на граф чрез матрица на съседство
Да се открият и поправят грешките в следната реализация на търсене на елемент в двоично наредено дърво:
void search(T const& x) {
  I it = iterator();
  while (*it != x) {
    if (it < x) it = ++it;
    if (it >= x) it = it++;
  }
  return *it;
}  
Кой от следните оператори правилно отваря текстовия файл students.txt за четене
istream("students.txt", ios::open);
ifstream if("students.txt");
ifstream fi("students.txt", ios::in);
ifstream::open("students.txt", ios::text);
Да се даде пример за физическо представяне на структурата от данни стек.
Да се опише в какъв ред ще бъдат изведени елементите на следното дървото при обхождане дясно-ляво-корен.Пример за двоично дърво
Кое от следните твърдения за балансирани двоични дървета е вярно?
  Ако в дадено двоично дърво броят на елементите в лявото и дясното му поддърво се различава с най-много 1, то е идеално балансирано.
  Има идеално балансирани дървета, които не са балансирани.
  Не всяко двоично дърво е балансирано, но всяко двоично наредено дърво е балансирано.
  За всяко балансирано дърво височината на лявото и дясното поддърво се различават с не повече от 1.
 Да се предложи примерна йерархия от класове, която позволява реализацията на хетерогенен списък от речници, всеки от които може да е с различна реализация: сортиран масив, AVL дърво или хеш таблица.

Коя от следните сложности е най-висока?

Експоненциална
Кубична
Логаритмична
Константна
Да се предефинират операторите >> и << за вход от и изход към поток за следния клас:
class Taxi {
private:
  char company[50];
  double rate;
};